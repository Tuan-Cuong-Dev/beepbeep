{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/1.%202025/22.%20BACKUP%20D%E1%BB%B0%20%C3%81N%20THEO%20TH%E1%BB%9CI%20GIAN/Th%C3%A1ng%2006.2025/beepbeep-app/src/lib/ebikes/ebikeService.ts"],"sourcesContent":["import {\r\n  addDoc,\r\n  collection,\r\n  doc,\r\n  serverTimestamp,\r\n  updateDoc,\r\n  getDocs,\r\n  query,\r\n  where,\r\n  deleteDoc,\r\n} from 'firebase/firestore';\r\nimport { db } from '@/src/firebaseConfig';\r\nimport { Ebike } from '@/src/lib/ebikes/ebikeTypes';\r\n\r\nexport async function saveEbike(bike: Ebike, isUpdate: boolean): Promise<Ebike[]> {\r\n  const dataToSave = {\r\n    ...bike,\r\n    updatedAt: serverTimestamp(),\r\n    createdAt: bike.createdAt || serverTimestamp(),\r\n  };\r\n\r\n  if (isUpdate && bike.id) {\r\n    await updateDoc(doc(db, 'ebikes', bike.id), dataToSave);\r\n  } else {\r\n    const docRef = await addDoc(collection(db, 'ebikes'), { ...dataToSave, id: '' });\r\n    await updateDoc(docRef, { id: docRef.id });\r\n  }\r\n\r\n  return fetchEbikesByCompany(bike.companyId);\r\n}\r\n\r\nexport async function fetchEbikesByCompany(companyId: string): Promise<Ebike[]> {\r\n  const q = query(collection(db, 'ebikes'), where('companyId', '==', companyId));\r\n  const snapshot = await getDocs(q);\r\n  return snapshot.docs.map((doc) => ({\r\n    id: doc.id,\r\n    ...(doc.data() as Omit<Ebike, 'id'>),\r\n  }));\r\n}\r\n\r\nexport async function deleteEbike(id: string, companyId: string): Promise<Ebike[]> {\r\n  await deleteDoc(doc(db, 'ebikes', id));\r\n  return fetchEbikesByCompany(companyId);\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;AAAA;AAWA;AAAA;;;AAGO,eAAe,UAAU,IAAW,EAAE,QAAiB;IAC5D,MAAM,aAAa;QACjB,GAAG,IAAI;QACP,WAAW,CAAA,GAAA,iKAAA,CAAA,kBAAe,AAAD;QACzB,WAAW,KAAK,SAAS,IAAI,CAAA,GAAA,iKAAA,CAAA,kBAAe,AAAD;IAC7C;IAEA,IAAI,YAAY,KAAK,EAAE,EAAE;QACvB,MAAM,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,qIAAA,CAAA,KAAE,EAAE,UAAU,KAAK,EAAE,GAAG;IAC9C,OAAO;QACL,MAAM,SAAS,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,qIAAA,CAAA,KAAE,EAAE,WAAW;YAAE,GAAG,UAAU;YAAE,IAAI;QAAG;QAC9E,MAAM,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,QAAQ;YAAE,IAAI,OAAO,EAAE;QAAC;IAC1C;IAEA,OAAO,qBAAqB,KAAK,SAAS;AAC5C;AAEO,eAAe,qBAAqB,SAAiB;IAC1D,MAAM,IAAI,CAAA,GAAA,iKAAA,CAAA,QAAK,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,qIAAA,CAAA,KAAE,EAAE,WAAW,CAAA,GAAA,iKAAA,CAAA,QAAK,AAAD,EAAE,aAAa,MAAM;IACnE,MAAM,WAAW,MAAM,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE;IAC/B,OAAO,SAAS,IAAI,CAAC,GAAG,CAAC,CAAC,MAAQ,CAAC;YACjC,IAAI,IAAI,EAAE;YACV,GAAI,IAAI,IAAI,EAAE;QAChB,CAAC;AACH;AAEO,eAAe,YAAY,EAAU,EAAE,SAAiB;IAC7D,MAAM,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,qIAAA,CAAA,KAAE,EAAE,UAAU;IAClC,OAAO,qBAAqB;AAC9B","debugId":null}}]
}